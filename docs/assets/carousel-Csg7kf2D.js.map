{"version":3,"file":"carousel-Csg7kf2D.js","sources":["../../src/js/components/carousel.js"],"sourcesContent":["// Карусель с бесшовным циклом\nexport class Carousel {\n  constructor(element) {\n    this.element = element;\n    this.init();\n  }\n\n  init() {\n    const container = this.element.querySelector(\".promo-carousel__container\");\n    const realSlides = Array.from(\n      this.element.querySelectorAll(\".promo-carousel__slide\")\n    );\n    const controls = this.element.querySelector(\".promo-carousel__controls\");\n\n    if (!container || !realSlides.length) return;\n\n    let realCount = realSlides.length;\n    const isCompact = this.element.classList.contains(\n      \"promo-carousel--compact\"\n    );\n\n    const getSlidesPerView = () => {\n      if (!isCompact) return 1;\n      const w = window.innerWidth || 1920;\n      if (w <= 480) return 1;\n      if (w <= 768) return 2;\n      if (w <= 1200) return 3;\n      return 4;\n    };\n\n    let slidesPerView = getSlidesPerView();\n    let unitWidthPercent = 100 / slidesPerView; // ширина одного шага\n\n    // Количество клонов до/после для бесшовного цикла\n    // Для мобильных устройств (slidesPerView = 1) используем меньше клонов\n    let clonesBefore =\n      slidesPerView === 1 ? 1 : Math.min(slidesPerView, realCount);\n    let clonesAfter =\n      slidesPerView === 1 ? 1 : Math.min(slidesPerView, realCount);\n\n    // виртуальный индекс (с учётом клонов)\n    let currentIndex = realCount > 1 ? clonesBefore : 0;\n    let isTransitioning = false;\n    let autoplayInterval;\n\n    // Создаем точки навигации (по реальным слайдам)\n    const dots = [];\n    if (controls) {\n      controls.replaceChildren();\n      for (let i = 0; i < realCount; i++) {\n        const dot = document.createElement(\"button\");\n        dot.className = `promo-carousel__dot ${\n          i === 0 ? \"promo-carousel__dot--active\" : \"\"\n        }`;\n        dot.addEventListener(\"click\", () => this.goToSlide(i));\n        controls.appendChild(dot);\n        dots.push(dot);\n      }\n    }\n\n    // Создаем кнопки навигации (стрелки)\n    const prevButton = document.createElement(\"button\");\n    prevButton.className = \"promo-carousel__arrow promo-carousel__arrow--prev\";\n    prevButton.setAttribute(\"aria-label\", \"Предыдущие фото\");\n    prevButton.textContent = \"❮\";\n    prevButton.addEventListener(\"click\", (e) => {\n      e.stopPropagation();\n      this.prev();\n    });\n\n    const nextButton = document.createElement(\"button\");\n    nextButton.className = \"promo-carousel__arrow promo-carousel__arrow--next\";\n    nextButton.setAttribute(\"aria-label\", \"Следующие фото\");\n    nextButton.textContent = \"❯\";\n    nextButton.addEventListener(\"click\", (e) => {\n      e.stopPropagation();\n      this.next();\n    });\n\n    this.element.appendChild(prevButton);\n    this.element.appendChild(nextButton);\n\n    // Помощники\n    const updateDots = () => {\n      if (!dots.length) return;\n      const activeRealIndex =\n        realCount > 1 ? (currentIndex - 1 + realCount) % realCount : 0;\n      dots.forEach((d, idx) => {\n        d.classList.toggle(\n          \"promo-carousel__dot--active\",\n          idx === activeRealIndex\n        );\n      });\n    };\n\n    const updatePosition = (smooth = true) => {\n      if (!smooth) {\n        const prevTransition = container.style.transition;\n        container.style.transition = \"none\";\n        // Для мобильных устройств используем точное позиционирование\n        const translateX =\n          slidesPerView === 1\n            ? `translateX(-${currentIndex * 100}%)`\n            : `translateX(-${currentIndex * unitWidthPercent}%)`;\n        container.style.transform = translateX;\n        // форсируем reflow\n        void container.offsetWidth;\n        container.style.transition = prevTransition || \"\";\n      } else {\n        // Для мобильных устройств используем точное позиционирование\n        const translateX =\n          slidesPerView === 1\n            ? `translateX(-${currentIndex * 100}%)`\n            : `translateX(-${currentIndex * unitWidthPercent}%)`;\n        container.style.transform = translateX;\n      }\n    };\n\n    // Инициализация бесшовного цикла: клоны\n    if (realCount > 1) {\n      // Создаем необходимое количество клонов для бесшовного режима\n      // Сначала клоны конца в начало\n      for (let i = 0; i < clonesBefore; i++) {\n        const idxFromEnd = realCount - 1 - i;\n        const clone = realSlides[idxFromEnd].cloneNode(true);\n        container.insertBefore(clone, container.firstChild);\n      }\n      // Затем клоны начала в конец\n      for (let i = 0; i < clonesAfter; i++) {\n        const clone = realSlides[i].cloneNode(true);\n        container.appendChild(clone);\n      }\n\n      // Стартуем с первого реального слайда (виртуальный индекс = clonesBefore)\n      updatePosition(false);\n\n      // Перехват конца анимации для \"перескока\" с клонов на реальные\n      container.addEventListener(\"transitionend\", () => {\n        isTransitioning = false;\n        const leftBoundary = clonesBefore;\n        const rightBoundary = clonesBefore + realCount;\n        if (currentIndex < leftBoundary) {\n          // ушли в левые клоны — переносим вправо на realCount позиций\n          currentIndex += realCount;\n          updatePosition(false);\n        } else if (currentIndex >= rightBoundary) {\n          // ушли в правые клоны — переносим влево на realCount позиций\n          currentIndex -= realCount;\n          updatePosition(false);\n        }\n        updateDots();\n      });\n    } else {\n      // Один слайд — позиция нулевая\n      updatePosition(false);\n    }\n\n    // Методы API\n    this.goToSlide = (realIndex) => {\n      if (isTransitioning) return;\n      if (realCount <= 1) return;\n      const targetIndex = realIndex + clonesBefore; // c учётом клонов\n      if (targetIndex === currentIndex) return;\n      isTransitioning = true;\n      currentIndex = targetIndex;\n      updatePosition(true);\n      updateDots();\n    };\n\n    this.prev = () => {\n      if (isTransitioning) return;\n      if (realCount <= 1) return;\n      isTransitioning = true;\n      // Для мобильных устройств (slidesPerView = 1) переключаем точно на 1 слайд\n      const step = slidesPerView === 1 ? 1 : 1;\n      currentIndex -= step;\n      updatePosition(true);\n      updateDots();\n    };\n\n    this.next = () => {\n      if (isTransitioning) return;\n      if (realCount <= 1) return;\n      isTransitioning = true;\n      // Для мобильных устройств (slidesPerView = 1) переключаем точно на 1 слайд\n      const step = slidesPerView === 1 ? 1 : 1;\n      currentIndex += step;\n      updatePosition(true);\n      updateDots();\n    };\n\n    // Автопереключение слайдов\n    this.startAutoplay = function () {\n      if (realCount <= 1) return;\n      autoplayInterval = setInterval(() => this.next(), 8000);\n    };\n\n    this.stopAutoplay = function () {\n      clearInterval(autoplayInterval);\n    };\n\n    // Остановка автоплей при взаимодействии\n    this.element.addEventListener(\"mouseenter\", () => this.stopAutoplay());\n    this.element.addEventListener(\"mouseleave\", () => this.startAutoplay());\n    this.element.addEventListener(\"touchstart\", () => this.stopAutoplay());\n    this.element.addEventListener(\"touchend\", () => this.startAutoplay());\n\n    // Клик по миниатюре в компактной галерее ведет на страницу галереи\n    if (this.element.classList.contains(\"promo-carousel--compact\")) {\n      this.element.addEventListener(\"click\", (e) => {\n        // Игнорируем клики по стрелкам и точкам\n        if (\n          e.target.closest(\".promo-carousel__arrow\") ||\n          e.target.closest(\".promo-carousel__controls\")\n        )\n          return;\n        if (e.target.closest(\"picture\") || e.target.closest(\"img\")) {\n          if (typeof window.navigateTo === \"function\") {\n            window.navigateTo(\"/gallery\");\n          } else {\n            window.location.href = \"/gallery\";\n          }\n        }\n      });\n    }\n\n    // Обработка ресайза для пересчёта slidesPerView и ширины шага\n    const handleResize = () => {\n      const newSpv = getSlidesPerView();\n      if (newSpv !== slidesPerView) {\n        slidesPerView = newSpv;\n        unitWidthPercent = 100 / slidesPerView;\n        // При смене режима, чтобы не \"прыгало\" — обновим позицию без анимации\n        updatePosition(false);\n      }\n    };\n    window.addEventListener(\"resize\", handleResize);\n\n    // Запуск\n    this.startAutoplay();\n\n    // Обработка свайпов на мобильных устройствах\n    let touchStartX = 0;\n    let touchEndX = 0;\n\n    this.element.addEventListener(\"touchstart\", (e) => {\n      touchStartX = e.touches[0].clientX;\n    });\n\n    this.element.addEventListener(\"touchmove\", (e) => {\n      touchEndX = e.touches[0].clientX;\n    });\n\n    this.element.addEventListener(\"touchend\", () => {\n      const swipeDistance = touchEndX - touchStartX;\n      // Уменьшаем порог для более чувствительных свайпов на мобильных\n      const threshold = slidesPerView === 1 ? 30 : 50;\n      if (Math.abs(swipeDistance) > threshold) {\n        if (swipeDistance > 0) {\n          this.prev();\n        } else {\n          this.next();\n        }\n      }\n    });\n  }\n}\n\n// Функция инициализации\nexport function initCarousel(element) {\n  return new Carousel(element);\n}\n"],"names":["Carousel","element","container","realSlides","controls","realCount","isCompact","getSlidesPerView","w","slidesPerView","unitWidthPercent","clonesBefore","clonesAfter","currentIndex","isTransitioning","autoplayInterval","dots","i","dot","prevButton","e","nextButton","updateDots","activeRealIndex","d","idx","updatePosition","smooth","translateX","prevTransition","idxFromEnd","clone","leftBoundary","rightBoundary","realIndex","targetIndex","handleResize","newSpv","touchStartX","touchEndX","swipeDistance","threshold","initCarousel"],"mappings":"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"}